{
  "env": {
    "browser": true,
    "es2021": true,
    "amd": true,
    "node": true,
    "jest": true
  },

  "plugins": ["react", "react-hooks", "@emotion", "import", "prettier"],
  "parser": "@babel/eslint-parser",
  "extends": [
    "next/core-web-vitals",
    "eslint:recommended",
    "plugin:import/recommended",
    "plugin:@next/next/recommended",
    "plugin:react-hooks/recommended",
    "prettier" // Add "prettier" last. This will turn off eslint rules conflicting with prettier. This is not what will format our code.
  ],
  "settings": {
    "react": {
      "version": "detect"
    }
  },

  "overrides": [
    {
      "files": ["*.ts", "*.tsx"], // Your TypeScript files extension
      "parser": "@typescript-eslint/parser",
      "plugins": ["@typescript-eslint"],
      // As mentioned in the comments, you should extend TypeScript plugins here,
      // instead of extending them outside the `overrides`.
      // If you don't want to extend any rules, you don't need an `extends` attribute.
      "extends": [
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:import/typescript"
        // "@typescript-eslint/eslint-recommended" // Add this to include only ESLint recommended rules for TypeScript
      ],

      "parserOptions": {
        "project": ["./tsconfig.json"] // Specify it only for TypeScript files
      },
      "settings": {
        "import/parsers": {
          "@typescript-eslint/parser": [".ts", ".tsx"]
        },
        "import/resolver": {
          "typescript": {
            "alwaysTryTypes": true // always try to resolve types under `<root>@types` directory even it doesn't contain any source code, like `@types/unist`
          }
        }
      },
      "rules": {
        "@typescript-eslint/no-unused-vars": [
          "error",
          { "argsIgnorePattern": "^_" }
        ]
      }
    },
    {
      "files": ["test/**"],
      "plugins": ["jest"],
      "extends": ["plugin:jest/recommended"],
      "rules": { "jest/prefer-expect-assertions": "off" }
    }
  ],
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": true,
    "requireConfigFile": false,
    "babelOptions": {
      "babelrc": false,
      "configFile": false,
      // your babel options
      "presets": ["@babel/preset-react"]
    }
  },
  "rules": {
    "react/react-in-jsx-scope": "off",
    "prettier/prettier": [
      "error",
      {
        "endOfLine": "auto"
      }
    ],

    "react-hooks/rules-of-hooks": "error", // Checks rules of Hooks
    "react-hooks/exhaustive-deps": "warn", // Checks effect dependencies
    // semi: ["error", "always"],
    "@emotion/jsx-import": "error",
    "@emotion/no-vanilla": "error",
    "@emotion/import-from-emotion": "error",
    "@emotion/styled-import": "error"
  },
  "root": true
}
