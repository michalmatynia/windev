/* eslint-disable import/no-named-as-default-member */
import * as React from 'react'

import type { AppProps } from 'next/app'
import { CacheProvider, EmotionCache } from '@emotion/react'
import { ThemeProvider } from '@mui/material'

// This below is required, no font withouth it
import '@fontsource/roboto/300.css'
import '@fontsource/roboto/400.css'
import '@fontsource/roboto/500.css'
import '@fontsource/roboto/700.css'
import createEmotionCache from '@lib/emotion/createEmotionCache'

import theme from 'themes/material-kit-pro-react-v2.0.0/index'

import '/styles/scss/nextjs-material-kit.scss?v=1.2.0'

import Head from 'next/head'
// eslint-disable-next-line @typescript-eslint/no-unused-vars
import { Router } from 'next/router'
interface MyAppProps extends AppProps {
  emotionCache?: EmotionCache
}

// Logic for loader during Page Transition - Kepp it commented out
/* Router.events.on('routeChangeStart', (url: string) => {
  console.log(`Loading: ${url}`)
  document.body.classList.add('body-page-transition')
  ReactDOM.render(
    <PageChange path={url} />,
    document.getElementById('page-transition')
  )
})
Router.events.on('routeChangeComplete', () => {
  ReactDOM.unmountComponentAtNode(document.getElementById('page-transition'))
  document.body.classList.remove('body-page-transition')
})
Router.events.on('routeChangeError', () => {
  ReactDOM.unmountComponentAtNode(document.getElementById('page-transition'))
  document.body.classList.remove('body-page-transition')
}) */

const clientSideEmotionCache = createEmotionCache()

const MyApp: React.FunctionComponent<MyAppProps> = (props) => {
  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
  const { Component, emotionCache = clientSideEmotionCache, pageProps } = props

  return (
    <>
      <CacheProvider value={emotionCache}>
        <Head key="head">
          <title>Milkbardesigners</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <ThemeProvider theme={theme}>
          {/* <CssBaseline /> */}
          <Component {...pageProps} />
        </ThemeProvider>
      </CacheProvider>
    </>
  )
}
export default MyApp
